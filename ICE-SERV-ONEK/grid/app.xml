<icegrid>
 <application name="onke-drug">
		 <properties id = "MultiThreaded">
			<property name = "Ice.PrintStackTraces" value="1"/>
			<property name = "Ice.Trace.Retry" value="2"/>
			<property name = "Ice.Trace.Network" value="2"/>
			<property name = "Ice.Trace.ThreadPool" value="2"/>
			<property name = "Ice.Trace.Locator" value="2"/>
		</properties>
		
		<!-- 客户端调用时需要这个名字   entry是接口继承类的全文件名（可以配置多个service） ${uuid}-${index}  id="${index}" replica-group="OrderServerRep"-->

	<server-template id="user-temp" >

		<parameter name="index"/>
		<parameter name="group"/>

		<icebox id = "user-${group}-box${index}" exe="java" activation="on-demand">

			<properties>
				<properties refid="MultiThreaded"/>
			</properties>
			
			<option>IceBox.Server</option>

			<env>CLASSPATH=../lib/user.jar</env>

			<service name="userService_${index}" entry="com.onek.server.infimp.ServerIceBoxImp" >
			
				<adapter name="userService_${index}" id="userService_${index}" endpoints="tcp:ws" replica-group="${group}">
					<object identity="userService_${index}" type="::inf::Interfaces" />
				</adapter>	

			</service>
				
		</icebox>
	</server-template>

	<replica-group id ="userServer-group">
		<load-balancing type="adaptive" n-replicas="0"/>
			<object identity="userServer" type="::inf::Interfaces" />
	</replica-group>


	<replica-group id ="orderServer-group">
		<load-balancing type="adaptive" n-replicas="0"/>
			<object identity="orderServer" type="::inf::Interfaces" />
	</replica-group>

	 <node name="node1">
   		<server-instance template="user-temp"  index="1" group="userServer-group"/>
     </node>

	<node name="node2">
   		<server-instance template="user-temp"  index="2" group="userServer-group"/>
    </node>

	

</application>
</icegrid>
